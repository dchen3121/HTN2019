{"version":3,"sources":["Stats.js","Webcam.js","theme.js","Graph.js","App.js","serviceWorker.js","index.js"],"names":["React","Component","Webcam","video","document","querySelector","navigator","mediaDevices","getUserMedia","width","window","outerWidth","height","outerHeight","then","stream","srcObject","catch","e","console","error","setInterval","canvas","createElement","videoWidth","videoHeight","getContext","drawImage","toBlob","b","a","oReq","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","parsed","JSON","parse","response","predictions","props","changeSlouch","tagName","send","this","establishWebcam","className","autoplay","id","axis","style","fill","stroke","strokeWidth","grid","pointerEvents","ticks","size","tickLabels","bar","data","padding","boxplot","max","median","min","q1","q3","boxWidth","legend","Colorscale","gutter","orientation","titleOrientation","type","line","stack","colorscale","quarter","earnings","last7Days","result","i","d","Date","setDate","getDate","push","log","Navigation","backgroundColor","position","top","boxShadow","transitionName","transitionAppear","transitionAppearTimeOut","transitionEnterTimeout","transitionLeaveTimeout","onClick","toVideo","toData","right","fontWeight","slouchStatus","App","state","isSlouch","page","bind","setState","display","Boolean","location","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d932a2d2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Stats extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"Yoga Pose of the Day:\",\r\n      stat1: \"Spinal Twist\",\r\n      stat2: \"Benefits: Spine, Back, Hips\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"stats\">\r\n        <h2>{this.state.title}</h2>\r\n        <p>{this.state.stat1}</p>\r\n        <p>{this.state.stat2}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\nimport request from \"request\";\r\nimport Transition from \"react-addons-css-transition-group\";\r\n\r\nclass Webcam extends React.Component {\r\n  establishWebcam() {\r\n    var video = document.querySelector(\"video\");\r\n    // var canvas = document.createElement(\"canvas\");\r\n\r\n    if (navigator.mediaDevices.getUserMedia) {\r\n      navigator.mediaDevices\r\n        .getUserMedia({\r\n          video: {\r\n            width: window.outerWidth + 500,\r\n            height: window.outerHeight + 500\r\n          }\r\n        })\r\n        .then(function(stream) {\r\n          video.srcObject = stream;\r\n        })\r\n        .catch(e => {\r\n          console.error(e);\r\n        });\r\n\r\n      setInterval(() => {\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = video.videoWidth;\r\n        canvas.height = video.videoHeight;\r\n        canvas.getContext(\"2d\").drawImage(video, 0, 0);\r\n        canvas.toBlob(async b => {\r\n          let oReq = new XMLHttpRequest();\r\n          oReq.open(\r\n            \"POST\",\r\n            \"https://eastus.api.cognitive.microsoft.com/customvision/v3.0/Prediction/40e592e7-67fd-4e0f-9122-02d3631f7f4f/classify/iterations/Iteration1/image\"\r\n          );\r\n          oReq.setRequestHeader(\r\n            \"Prediction-Key\",\r\n            \"17b8411197b6462094a8292195f5725e\"\r\n          );\r\n          oReq.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\r\n\r\n          oReq.onreadystatechange = () => {\r\n            if (oReq.readyState === 4) {\r\n              let parsed = JSON.parse(oReq.response);\r\n              if (!parsed.predictions) return;\r\n              this.props.changeSlouch(parsed.predictions[0].tagName);\r\n            }\r\n          };\r\n\r\n          oReq.send(b);\r\n        });\r\n      }, 5000);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.establishWebcam();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"webcam\">\r\n          <video autoplay=\"true\" id=\"videoElement\"></video>\r\n          <div id=\"info\">\r\n            <p id=\"slouch\"></p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Webcam;\r\n","export default {\r\n  axis: {\r\n    style: {\r\n      axis: {\r\n        fill: \"#ffffff\",\r\n        stroke: \"#ffffff\",\r\n        strokeWidth: 1\r\n      },\r\n      grid: {\r\n        fill: \"none\",\r\n        stroke: \"none\",\r\n        pointerEvents: \"painted\"\r\n      },\r\n      ticks: {\r\n        fill: \"transparent\",\r\n        size: 1,\r\n        stroke: \"#ffffff\"\r\n      },\r\n      tickLabels: {\r\n        fill: \"#ffffff\"\r\n      }\r\n    }\r\n  },\r\n  bar: {\r\n    style: {\r\n      data: {\r\n        fill: \"#ffffff\",\r\n        padding: 8,\r\n        strokeWidth: 0\r\n      }\r\n    }\r\n  },\r\n  boxplot: {\r\n    style: {\r\n      max: {\r\n        padding: 8,\r\n        stroke: \"#ffffff\",\r\n        strokeWidth: 1\r\n      },\r\n      median: {\r\n        padding: 8,\r\n        stroke: \"#ffffff\",\r\n        strokeWidth: 1\r\n      },\r\n      min: {\r\n        padding: 8,\r\n        stroke: \"#ffffff\",\r\n        strokeWidth: 1\r\n      },\r\n      q1: {\r\n        padding: 8,\r\n        fill: \"#ffffff\"\r\n      },\r\n      q3: {\r\n        padding: 8,\r\n        fill: \"#ffffff\"\r\n      }\r\n    },\r\n    boxWidth: 20\r\n  },\r\n  legend: {\r\n    Colorscale: [\"#ffffff\"],\r\n    gutter: 10,\r\n    orientation: \"vertical\",\r\n    titleOrientation: \"top\",\r\n    style: {\r\n      data: {\r\n        type: \"circle\"\r\n      }\r\n    }\r\n  },\r\n  line: {\r\n    style: {\r\n      data: {\r\n        fill: \"#ffffff\",\r\n        stroke: \"#ffffff\",\r\n        strokeWidth: 2\r\n      }\r\n    }\r\n  },\r\n  stack: {\r\n    colorscale: [\"#ffffff\"]\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  VictoryBar,\r\n  VictoryChart,\r\n  VictoryAxis,\r\n  VictoryLabel,\r\n  VictoryTheme\r\n} from \"victory\";\r\nimport XYTheme from \"./theme.js\";\r\n\r\n// TO DO: FIX THIS DATA AS WELL AS JSON KEY VALUE PAIR NAMES\r\nconst data = [\r\n  { quarter: 1, earnings: 1 },\r\n  { quarter: 2, earnings: 2 },\r\n  { quarter: 3, earnings: 3 },\r\n  { quarter: 4, earnings: 4 },\r\n  { quarter: 5, earnings: 5 },\r\n  { quarter: 6, earnings: 6 },\r\n  { quarter: 7, earnings: 7 }\r\n];\r\n\r\nfunction generateData() {\r\n  var result = {};\r\n}\r\n\r\nfunction last7Days() {\r\n  var result = [];\r\n  for (var i = 0; i < 7; i++) {\r\n    var d = new Date();\r\n    d.setDate(d.getDate() - i);\r\n    result.push(d.getDate());\r\n  }\r\n  console.log(result);\r\n  return result;\r\n}\r\n\r\nfunction getDataset() {\r\n  let oReq = new XMLHttpRequest();\r\n  oReq.open(\"GET\", \"localhost:4999/data/week\");\r\n  var response = oReq.response;\r\n  console.log(\"SUCCESS\");\r\n  console.log(response);\r\n  var final = {};\r\n  for (var i = 0; i < 7; i++) {\r\n    final[i] = { x: response[i].numSlouch, y: response[i].date };\r\n    // do something with \"key\" and \"value\" variables\r\n  }\r\n  return final;\r\n}\r\nclass Graph extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      dates: last7Days()\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <VictoryChart\r\n        id=\"graph\"\r\n        // adding the material theme provided with Victory\r\n        theme={XYTheme}\r\n        domainPadding={20}\r\n      >\r\n        <VictoryLabel\r\n          text=\"Slouches in September\"\r\n          x={175}\r\n          y={30}\r\n          textAnchor=\"middle\"\r\n        />\r\n        {/*TO DO: FIX DATES to dynamically adjust */}\r\n        <VictoryAxis\r\n          axisLabelComponent={[\"S\", \"M\", \"T\", \"W\", \"TH\", \"F\", \"S\"]}\r\n        />\r\n        {/*TO DO: CHANGE AXES */}\r\n        <VictoryAxis dependentAxis tickFormat={x => `${x}`} />\r\n        <VictoryBar\r\n          barRatio={0.5}\r\n          horizontal={true}\r\n          style={{ data: { fill: \"#69bed6\" } }}\r\n          data={data}\r\n          x=\"slouchCount\"\r\n          y=\"day\"\r\n        />\r\n      </VictoryChart>\r\n    );\r\n  }\r\n}\r\nexport default Graph;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Statistics from \"./Stats\";\r\nimport Webcam from \"./Webcam\";\r\nimport Graph from \"./Graph\";\r\nimport Transition from \"react-addons-css-transition-group\";\r\n\r\nclass Navigation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          height: \"100px\",\r\n          backgroundColor: \"white\",\r\n          width: \"100%\",\r\n          position: \"fixed\",\r\n          top: 0,\r\n          boxShadow: \"0 1px 6px 0 rgba(32,33,36,0.28)\"\r\n        }}\r\n      >\r\n        <nav style={{}}>\r\n          <Transition\r\n            transitionName=\"nave\"\r\n            transitionAppear={true}\r\n            transitionAppearTimeOut={350}\r\n            transitionEnterTimeout={350}\r\n            transitionLeaveTimeout={350}\r\n          >\r\n            <div>\r\n              <li id=\"place\" onClick={this.props.toVideo}>\r\n                VIDEO\r\n              </li>\r\n              <li id=\"place\" onClick={this.props.toData}>\r\n                DATA\r\n              </li>\r\n              <li style={{ right: 0, fontWeight: \"bolder\" }}>\r\n                {this.props.slouchStatus ? \"SLOUCHED\" : \"NOT SLOUCHED\"}\r\n              </li>\r\n            </div>\r\n          </Transition>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSlouch: false,\r\n      page: null\r\n    };\r\n\r\n    this.toVideo = this.toVideo.bind(this);\r\n    this.toData = this.toData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      page: \"video\"\r\n    });\r\n  }\r\n\r\n  toVideo() {\r\n    console.log(\"video\");\r\n    this.setState({\r\n      page: \"video\"\r\n    });\r\n  }\r\n\r\n  toData() {\r\n    console.log(\"data\");\r\n    this.setState({\r\n      page: \"data\"\r\n    });\r\n  }\r\n\r\n  changeSlouch(slouchStatus) {\r\n    console.log(slouchStatus);\r\n    if (slouchStatus === \"slouch\") {\r\n      this.setState({\r\n        isSlouch: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isSlouch: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.isSlouch);\r\n    return (\r\n      <div>\r\n        <Navigation\r\n          page={this.state.page}\r\n          toVideo={this.toVideo}\r\n          toData={this.toData}\r\n          slouchStatus={this.state.isSlouch}\r\n        ></Navigation>\r\n        <Webcam\r\n          display={this.state.page === \"video\" ? \"visible\" : \"hidden\"}\r\n          page={this.state.page}\r\n          changeSlouch={slouchStatus => this.changeSlouch(slouchStatus)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n{\r\n  /* <div className=\"App\" id=\"content\">\r\n            <div id=\"Graph\">\r\n              <Graph />\r\n            </div>\r\n            <div id=\"Stats\">\r\n            <Statistics />\r\n          </div>\r\n          </div> */\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBSO7IT5_sfrmwWq-qUH8iBskqq5N7A_08\",\r\n    authDomain: \"htn2019-d987b.firebaseapp.com\",\r\n    databaseURL: \"https://htn2019-d987b.firebaseio.com\",\r\n    storageBucket: \"htn2019-d987b.appspot.com\",\r\n    serviceAccount: \"do_not_commit/htn2019-d987b-firebase-adminsdk-pz1d6-52193b1ef8.json\",\r\n    projectId: \"htn2019-d987b\",\r\n    messagingSenderId: \"472926526203\",\r\n    appID: \"1:472926526203:web:53ee8612353b83279dee5e\",\r\n  };\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}